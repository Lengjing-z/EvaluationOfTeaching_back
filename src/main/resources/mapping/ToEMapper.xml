<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.wrrrrrrry.evaluationteaching.mapper.ToEMapper">
    <resultMap id="questionnaire" type="org.wrrrrrrry.evaluationteaching.entity.Questionnaire">
        <id property="id" column="qnid"/>
        <result property="title" column="title"/>
        <result property="indexRootId" column="index_root_id"/>
        <collection property="beEvaUsers" resultMap="beEvauser"/>
        <collection property="evaUsers" resultMap="evauser"/>
    </resultMap>
    <resultMap id="beEvauser" type="org.wrrrrrrry.evaluationteaching.entity.User">
        <id property="id" column="beEvaid"/>
        <result property="name" column="beEvaname"/>
        <result property="code" column="beEvacode"/>
        <collection property="institute" resultMap="beEvainstitute"/>
    </resultMap>
    <resultMap id="evauser" type="org.wrrrrrrry.evaluationteaching.entity.User">
        <id property="id" column="evaid"/>
        <result property="name" column="evaname"/>
        <result property="code" column="evacode"/>
        <collection property="institute" resultMap="evainstitute"/>
    </resultMap>
    <resultMap id="beEvainstitute" type="org.wrrrrrrry.evaluationteaching.entity.Institute">
        <id property="id" column="beEvainid"/>
    </resultMap>
    <resultMap id="evainstitute" type="org.wrrrrrrry.evaluationteaching.entity.Institute">
        <id property="id" column="evainid"/>
    </resultMap>
    <insert id="insertStudentAnswer" parameterType="org.wrrrrrrry.evaluationteaching.entity.StudentAnswer">
        insert into student_answer(stt_id, s_id, q_id, answer) values
        <foreach collection="studentAnswers" item="studentAnswer" separator=",">
            (
            #{studentAnswer.sttId},
            #{studentAnswer.stId},
            #{studentAnswer.qsId},
            #{studentAnswer.answer}
            )
        </foreach>
    </insert>
    <insert id="insertTeacherAnswer" parameterType="org.wrrrrrrry.evaluationteaching.entity.TeacherAnswer">
        insert into teacher_answer(ttt_id, q_id, valuator_id, beValuator_id, answer) values
        <foreach collection="teacherAnswers" item="teacherAnswer" separator=",">
            (
            #{teacherAnswer.tttId},
            #{teacherAnswer.qsId},
            #{teacherAnswer.valuatorId},
            #{teacherAnswer.beValuatorId},
            #{teacherAnswer.answer}
            )
        </foreach>
    </insert>
    <update id="updateStudentMessage">
        update message
        set is_finished = true
        where stt_id = #{sttId}
          and u_id = (select id from user where code = #{code})
    </update>
    <update id="updateTeacherMessage">
        update message
        set is_finished = true
        where u_id = #{uId}
          and ttt_id = #{tttId}
          and target_id = #{targetId}
    </update>
    <select id="selectStudentFinishedQuestionnaire" resultMap="questionnaire">
        select qn.id    as qnid,
               title,
               index_root_id,
               u.id     as beEvaid,
               u.name   as beEvaname,
               u.in_id  as beEvainid,
               u.code   as beEvacode,
               u1.id    as evaid,
               u1.name  as evaname,
               u1.in_id as evainid,
               u1.code  as evacode
        from questionnaire qn
                 left join studentToteacher sT on qn.id = sT.qn_id
                 left join message m on sT.id = m.stt_id
                 left join user u on m.target_id = u.id
                 left join user u1 on m.u_id = u1.id
        where u1.code = #{code}
          and is_finished = true
    </select>
    <select id="selectTeacherFinishedQuestionnaire" resultMap="questionnaire">
        select qn.id    as qnid,
               title,
               index_root_id,
               u.id     as beEvaid,
               u.name   as beEvaname,
               u.in_id  as beEvainid,
               u.code   as beEvacode,
               u1.id    as evaid,
               u1.name  as evaname,
               u1.in_id as evainid,
               u1.code  as evacode
        from questionnaire qn
                 left join teacherToteacher tT on qn.id = tT.qn_id
                 left join message m on tT.id = m.ttt_id
                 left join user u on m.target_id = u.id
                 left join user u1 on m.u_id = u1.id
        where u1.code = #{code}
          and is_finished = true
    </select>
    <select id="selectStudentFinishedDetailById" resultType="java.util.Map">
        select content as content, answer as answer
        from question
                 left join questionnaire q on question.qn_id = q.id
                 left join student_answer sa on question.id = sa.q_id
                 left join user u on sa.s_id = u.id
        where q.id = #{id} and u.code = #{code}
    </select>
    <select id="selectTeacherFinishedDetailById" resultType="java.util.Map">
        select content as content, answer as answer
        from question
                 left join questionnaire q on question.qn_id = q.id
                 left join teacher_answer ta on question.id = ta.q_id
                 left join user u on ta.beValuator_id = u.id
        where q.id = #{id} and u.code=#{code}
    </select>
    <select id="selectStudentProgressingQuestionnaire" resultMap="questionnaire">
        select qn.id    as qnid,
               title,
               index_root_id,
               u.id     as beEvaid,
               u.name   as beEvaname,
               u.in_id  as beEvainid,
               u.code   as beEvacode,
               u1.id    as evaid,
               u1.name  as evaname,
               u1.in_id as evainid,
               u1.code  as evacode
        from questionnaire qn
                 left join studentToteacher sT on qn.id = sT.qn_id
                 left join message m on sT.id = m.stt_id
                 left join user u on m.target_id = u.id
                 left join user u1 on m.u_id = u1.id
        where u1.code = #{code}
          and is_finished = false
    </select>
    <select id="selectTeacherProgressingQuestionnaire" resultMap="questionnaire">
        select qn.id    as qnid,
               title,
               index_root_id,
               u.id     as beEvaid,
               u.name   as beEvaname,
               u.in_id  as beEvainid,
               u.code   as beEvacode,
               u1.id    as evaid,
               u1.name  as evaname,
               u1.in_id as evainid,
               u1.code  as evacode
        from questionnaire qn
                 left join teacherToteacher tT on qn.id = tT.qn_id
                 left join message m on tT.id = m.ttt_id
                 left join user u on m.target_id = u.id
                 left join user u1 on m.u_id = u1.id
        where u1.code = #{code}
          and is_finished = false
    </select>
    <select id="selectStudentProgressingDetailById"
            resultType="org.wrrrrrrry.evaluationteaching.entity.Question">
        select id, content, qn_id, index_end_id
        from question
        where qn_id = #{id};
    </select>
    <select id="selectTeacherProgressingDetailById"
            resultType="org.wrrrrrrry.evaluationteaching.entity.Question">
        select id, content, qn_id, index_end_id
        from question
        where qn_id = #{id};
    </select>

    <select id="selectEvaluationInstituteList" resultType="java.util.Map">
        select tT.id         as tttId,
               tT.end_time   as endTime,
               tT.begin_time as begainTime,
               q.id          as qId,
               q.title       as qTitle,
               i.id          as iId,
               i.name        as iName,
               q.index_root_id as indexRootId
        from teacherToteacher tT
                 left join questionnaire q on tT.qn_id = q.id
                 left join institute i on tT.in_id = i.id
                 left join user u on i.id = u.in_id
        where u.code = #{code}
    </select>

    <select id="selectEvaluationCourseList" resultType="java.util.Map">
        select qn.id         as qnId,
               qn.title      as qnTitle,
               sT.id         as sttId,
               sT.mid_id     as midId,
               sT.begin_time as beginTime,
               sT.end_time   as endTime,
               u.name        as uName,
               u.id          as uId,
               cla.id        as claId,
               cla.name      as claName,
               c.id          as cId,
               c.name        as cName,
               qn.index_root_id as indexRootId
        from studentToteacher sT
                 left join questionnaire qn on sT.qn_id = qn.id
                 left join course_class_teacher cct on cct.id = sT.mid_id
                 left join user u on cct.t_id = u.id
                 left join class cla on cct.cla_id = cla.id
                 left join course c on cct.course_id = c.id
        where u.code = #{code}
    </select>

    <select id="selectbECoPro" resultType="java.util.Map">
        select u.id          as uid,
               u.name        as uName,
               u.code        as uCode,
               u.in_id       as uInId,
               m.id          as mId,
               m.target_id   as targetId,
               m.is_finished as isFinished,
               m.is_read     as isRead
        from studentToteacher stt
                 left join message m on stt.id = m.stt_id
                 left join user u on m.u_id = u.id
        where stt.id = #{sttId}
    </select>
    <select id="selectbEInPro" resultType="java.util.Map">
        select m.is_finished as is_finished,
                ttt.qn_id as qn_id,
                target.id as target_id,
                target.name as name,
                ttt.id as ttt_id,
                ttt.begin_time as begin_time,
                ttt.end_time as end_time

        from teacherToteacher ttt
                 left join message m on ttt.id = m.ttt_id
                 left join user u on m.u_id = u.id
                 left join user target on m.target_id = target.id
        where u.code = #{code} and ttt.id = #{tttId}
    </select>
    <select id="selectBECoDetail" resultType="java.util.Map">
        select student_answer.id, stt_id as sttId,
               s_id as sId, q_id as qId, answer, q.index_end_id as indexId
        from student_answer
        left join question q on student_answer.q_id = q.id
        where stt_id = #{sttId}
    </select>
    <select id="selectBEInDetail" resultType="java.util.Map">
        select teacher_answer.id, ttt_id as tttId, q_id as qsId, valuator_id as valuatorId, beValuator_id as beValuatorId,q.index_end_id as indexId, answer
        from teacher_answer
        left join question q on teacher_answer.q_id = q.id
        where ttt_id = #{tttId}
    </select>
    <select id="selectStudentEvaluationList" resultType="java.util.Map">
        select studentToteacher.id as stId,
               studentToteacher.mid_id,
               studentToteacher.qn_id,
               studentToteacher.begin_time,
               studentToteacher.end_time,
               q.id                as qnId,
               q.title,
               q.index_root_id,
               cct.id              as cctId,
               cct.course_id,
               cct.cla_id,
               cct.t_id,
               c.id                as couId,
               c.name              as couName,
               c.is_major,
               c.is_public         as couPub,
               c2.id               as claId,
               c2.name             as claName,
               c2.is_public        as claPub
        from studentToteacher
                 left join questionnaire q on studentToteacher.qn_id = q.id
                 left join course_class_teacher cct on studentToteacher.mid_id = cct.id
                 left join course c on cct.course_id = c.id
                 left join class c2 on cct.cla_id = c2.id
    </select>
    <select id="selectTeacherEvaluationList" resultType="java.util.Map">
        select teacherToteacher.id,
               qn_id,
               in_id,
               begin_time,
               end_time,
               q.id as qnId,
               title,
               index_root_id,
               i.id as inId,
               name
        from teacherToteacher
                 left join questionnaire q on teacherToteacher.qn_id = q.id
                 left join institute i on teacherToteacher.in_id = i.id
    </select>

    <select id="selectAETD" resultType="java.util.Map">
        select teacher_answer.id, ttt_id as tttId, q_id as qsId, valuator_id as valuatorId, beValuator_id as beValuatorId,q.index_end_id as indexId, answer
        from teacher_answer
                 left join question q on teacher_answer.q_id = q.id
        where ttt_id = #{tttId}
    </select>
    <select id="selectAETP" resultType="java.util.Map">
        select *
        from teacherToteacher ttt
                 left join message m on ttt.id = m.ttt_id
                 left join user u on m.u_id = u.id
                 left join user target on m.target_id = target.id
        where ttt.id = #{tttId}
    </select>
    <select id="selectAESD" resultType="java.util.Map">
        select student_answer.id, stt_id as sttId,
               s_id as sId, q_id as qId, answer, q.index_end_id as indexId
        from student_answer
                 left join question q on student_answer.q_id = q.id
        where stt_id = #{sttId}
    </select>
    <select id="selectAESP" resultType="java.util.Map">
        select u.id          as uid,
               u.name        as uName,
               u.code        as uCode,
               u.in_id       as uInId,
               m.id          as mId,
               m.target_id   as targetId,
               m.is_finished as isFinished,
               m.is_read     as isRead
        from studentToteacher stt
                 left join message m on stt.id = m.stt_id
                 left join user u on m.u_id = u.id
        where stt.id = #{sttId}
    </select>

</mapper>